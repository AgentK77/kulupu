trigger:
- master
- refs/tags/*

jobs:
- job: Linux
  pool:
    vmImage: 'ubuntu-latest'
  timeoutInMinutes: 0
  steps:
  - script: git submodule update --init --recursive
    displayName: 'Submodules'
  - script: ./scripts/ci-init.sh
    displayName: 'Rust setup'
  - script: cargo test --release --all
    displayName: 'Run tests'
  - script: cargo build --release
    displayName: 'Build artifacts'
  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: 'target/release/kulupu'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/kulupu-linux.zip'
    displayName: 'Archive artifacts'
  - script: |
      shasum -a 256 $(Build.ArtifactStagingDirectory)/kulupu-linux.zip > $(Build.ArtifactStagingDirectory)/kulupu-linux.zip.sha256
    displayName: 'Finalize artifacts'
  - task: PublishBuildArtifacts@1
    displayName: 'Publish artifacts'

- job: MacOS
  pool:
    vmImage: 'macOS-latest'
  timeoutInMinutes: 0
  steps:
  - script: git submodule update --init --recursive
    displayName: 'Submodules'
  - script: ./scripts/ci-init.sh
    displayName: 'Rust setup'
  - script: |
      source ~/.cargo/env
      cargo test --release --all
    displayName: 'Run tests'
  - script: |
      source ~/.cargo/env
      cargo build --release
    displayName: 'Build artifacts'
  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: 'target/release/kulupu'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/kulupu-macos.zip'
    displayName: 'Archive artifacts'
  - script: |
      shasum -a 256 $(Build.ArtifactStagingDirectory)/kulupu-macos.zip > $(Build.ArtifactStagingDirectory)/kulupu-macos.zip.sha256
    displayName: 'Finalize artifacts'
  - task: PublishBuildArtifacts@1
    displayName: 'Publish artifacts'

- job: Windows
  pool:
    vmImage: 'windows-latest'
  timeoutInMinutes: 0
  steps:
  - script: git submodule update --init --recursive
    displayName: 'Submodules'
  - script: |
      curl -f -o d:\llvm+clang+lld-10.0.0-x86_64-windows-msvc-release-mt.tar.xz https://ziglang.org/deps/llvm+clang+lld-10.0.0-x86_64-windows-msvc-release-mt.tar.xz
      7z x "d:\llvm+clang+lld-10.0.0-x86_64-windows-msvc-release-mt.tar.xz" -so | 7z x -aoa -si -ttar -o"d:\c"
      dir d:\c\llvm+clang+lld-10.0.0-x86_64-windows-msvc-release-mt\bin
    displayName: 'Libclang setup'
  - script: |
      rustup update nightly
      rustup update stable
      rustup target add wasm32-unknown-unknown --toolchain nightly
      cargo +nightly install --git https://github.com/alexcrichton/wasm-gc --force
    displayName: 'Rust setup'
  - script: |
      set LIBCLANG_PATH=d:\c\llvm+clang+lld-10.0.0-x86_64-windows-msvc-release-mt\bin
      cargo build --release
    displayName: 'Build artifacts'
  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: 'target/release/kulupu.exe'
      includeRootFolder: false
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/kulupu-windows.zip'
    displayName: 'Archive artifacts'
  - script: |
      CertUtil -hashfile $(Build.ArtifactStagingDirectory)/kulupu-windows.zip SHA256 > $(Build.ArtifactStagingDirectory)/kulupu-windows.zip.sha256
    displayName: 'Finalize artifacts'
  - task: PublishBuildArtifacts@1
    displayName: 'Publish artifacts'
